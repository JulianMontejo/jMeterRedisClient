<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Plan de Pruebas" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Redis Client Sampler examples" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Vars definition" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="REDIS_SERVER" elementType="Argument">
              <stringProp name="Argument.name">REDIS_SERVER</stringProp>
              <stringProp name="Argument.value">192.168.122.140:6379</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Set a key" enabled="true">
          <stringProp name="operation">set</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data">Key value line 1
key value line 2 </stringProp>
          <stringProp name="key">keyName</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get a key" enabled="true">
          <stringProp name="operation">get</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">keyName</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1358398709">Key value line 1
key value line 2 </stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Key type" enabled="true">
          <stringProp name="operation">type</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">keyName</stringProp>
          <stringProp name="field"></stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-891985903">string</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Set a hkey" enabled="true">
          <stringProp name="operation">hset</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data">one: 1</stringProp>
          <stringProp name="key">HkeyName</stringProp>
          <stringProp name="field">first</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get a hkey" enabled="true">
          <stringProp name="operation">hget</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName</stringProp>
          <stringProp name="field">first</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1012478555">one: 1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get a hkey (not found)" enabled="true">
          <stringProp name="operation">hget</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName</stringProp>
          <stringProp name="field">second</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3392903">null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Set a hkey" enabled="true">
          <stringProp name="operation">hset</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data">two: 2</stringProp>
          <stringProp name="key">HkeyName</stringProp>
          <stringProp name="field">second</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get a hkey (now Exists)" enabled="true">
          <stringProp name="operation">hget</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName</stringProp>
          <stringProp name="field">second</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-860723200">two: 2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Delete a hkey" enabled="true">
          <stringProp name="operation">hdel</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName</stringProp>
          <stringProp name="field">second</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Set a hkey with multiple data" enabled="true">
          <stringProp name="TestPlan.comments">data format: &lt;field&gt;\\t&lt;data&gt;\n</stringProp>
          <stringProp name="operation">hsetM</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data">multiple_first	m1
multiple_second	m2	m22</stringProp>
          <stringProp name="key">HkeyName2</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get a hkey" enabled="true">
          <stringProp name="operation">hget</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName2</stringProp>
          <stringProp name="field">multiple_first</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3428">m1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get a hole hkey" enabled="true">
          <stringProp name="operation">hgetAll</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName2</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1823882399">{multiple_first=m1, multiple_second=m2	m22}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get all keys" enabled="true">
          <stringProp name="operation">keys</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">*keyName*</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="112649282">HkeyName</stringProp>
              <stringProp name="-815643254">keyName</stringProp>
              <stringProp name="-802839504">HkeyName2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Expire a hkey in some seconds" enabled="true">
          <stringProp name="operation">expire</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName2</stringProp>
          <stringProp name="field">5</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Find the remaining time to expire" enabled="true">
          <stringProp name="operation">ttl</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName2</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait to expire" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">6000</stringProp>
        </TestAction>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get all keys (one has expired)" enabled="true">
          <stringProp name="operation">keys</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">*keyName*</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="484862952">keyName2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="112649282">HkeyName</stringProp>
              <stringProp name="-815643254">keyName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Expire a hkey in 5 seconds using a timestamp" enabled="true">
          <stringProp name="operation">expireAt</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName</stringProp>
          <stringProp name="field">${__javaScript(Math.floor(${__timeShift(,,PT5.0S,,)}/1000).toFixed(0),)}</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Find the remaining time to expire" enabled="true">
          <stringProp name="operation">ttl</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">HkeyName</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait to expire" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">6000</stringProp>
        </TestAction>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get all keys (other has expired)" enabled="true">
          <stringProp name="operation">keys</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">*keyName*</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-784735890">[keyName]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Delete a key" enabled="true">
          <stringProp name="operation">del</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">keyName</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree/>
        <es.jma.lib.jmeter.commons.sampler.RedisClientSampler guiclass="TestBeanGUI" testclass="es.jma.lib.jmeter.commons.sampler.RedisClientSampler" testname="Get all keys (None)" enabled="true">
          <stringProp name="operation">keys</stringProp>
          <stringProp name="urlConnection">${REDIS_SERVER}</stringProp>
          <stringProp name="data"></stringProp>
          <stringProp name="key">*keyName*</stringProp>
        </es.jma.lib.jmeter.commons.sampler.RedisClientSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2914">[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Ver Árbol de Resultados" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
